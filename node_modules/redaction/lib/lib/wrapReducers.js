'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _data = require('./data');

var _data2 = _interopRequireDefault(_data);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var dispatch = void 0;
var waitList = [];(function resolveDispatch() {
  if (_data2.default.store) {
    dispatch = _data2.default.store.dispatch;

    waitList.forEach(function (action) {
      return action(dispatch);
    });
  } else {
    setTimeout(function () {
      resolveDispatch();
    }, 100);
  }
})();

exports.default = function (fromJS) {
  return function (reducers) {
    var dispatchedReducers = {};

    for (var nodeName in reducers) {
      if (!reducers.hasOwnProperty(nodeName)) continue;

      dispatchedReducers[nodeName] = {};

      var _loop = function _loop(methodName) {
        if (!reducers[nodeName].hasOwnProperty(methodName)) return 'continue';
        if (methodName === 'default') return 'continue';
        if (methodName === 'initialState') return 'continue';

        var type = nodeName + '.' + methodName;
        var dispatchedReducer = function dispatchedReducer(payload) {
          var method = function method(dispatch) {
            return dispatch({
              type: type,
              payload: fromJS ? fromJS(payload) : payload
            });
          };

          if (dispatch) {
            method(dispatch);
          } else {
            waitList.push(method);
          }
        };

        dispatchedReducers[nodeName][methodName] = dispatchedReducer;
        dispatchedReducers[nodeName][methodName].type = type;
      };

      for (var methodName in reducers[nodeName]) {
        var _ret = _loop(methodName);

        if (_ret === 'continue') continue;
      }
    }

    return dispatchedReducers;
  };
};