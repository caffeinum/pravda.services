'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _immutable = require('immutable');

var combineReducers = function combineReducers(reducers) {
  var combinedReducers = {};

  var _loop = function _loop(nodeName) {
    if (!reducers.hasOwnProperty(nodeName)) return 'continue';

    var initialState = 'initialState' in reducers[nodeName] ? reducers[nodeName].initialState : (0, _immutable.Map)({});
    var nodeReducers = {};

    for (var methodName in reducers[nodeName]) {
      if (!reducers[nodeName].hasOwnProperty(methodName)) continue;
      if (methodName === 'default') continue;
      if (methodName === 'initialState') continue;

      var reducer = reducers[nodeName][methodName];
      var type = nodeName + '.' + methodName;

      nodeReducers[type] = reducer;
    }

    combinedReducers[nodeName] = function () {
      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
      var _ref = arguments[1];
      var type = _ref.type,
          payload = _ref.payload;

      if (type in nodeReducers) {
        return nodeReducers[type](state, payload);
      }

      return state;
    };
  };

  for (var nodeName in reducers) {
    var _ret = _loop(nodeName);

    if (_ret === 'continue') continue;
  }

  return combinedReducers;
};

exports.default = combineReducers;